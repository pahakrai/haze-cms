scalar Date

type PaymentMethod {
  _id: ID!
	code: String!
	name: String
	isActive: Boolean!

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

# input PaymentMethodCreateModel {
#   name: String!
# }

# input PaymentMethodUpdateModel {
#   name: String
# }

type PaginatePaymentMethod {
  nodes: [PaymentMethod]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input PaymentMethodSearchModel {
  q: String
	isActive: Boolean
}

type Query {
  paymentMethod(id: ID!): PaymentMethod
  paymentMethods(
    query: PaymentMethodSearchModel,
    paginate: Paginate,
    options: QueryOption
  ): PaginatePaymentMethod
}

# type Mutation {
#   createPaymentMethod(paymentMethodCreateModel:PaymentMethodCreateModel): PaymentMethod
#   updatePaymentMethod(id: ID!, paymentMethodUpdateModel:PaymentMethodUpdateModel): PaymentMethod
# }
