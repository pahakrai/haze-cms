scalar Date

type Feedback {
  _id: ID!
  from: User!
  to: User!
  workspace: Workspace
  rating: Float
  comment: String

  # custom resolve field
  order: Order
  product: Product

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input FeedbackCreateModel {
  to: String!
  refType: String!
  ref: String!
  rating: Float!
  comment: String
}

input FeedbackUpdateModel {
  name: String
}

type PaginateFeedback {
  nodes: [Feedback]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input FeedbackSearchModel {
  client: String
  order: String
  ref: String
  refType: String
}

type Query {
  feedback(id: ID, query: FeedbackSearchModel): Feedback
  isLeftFeedbackYet(to: String, refType: String, ref: String): Boolean
  feedbacks(
    query: FeedbackSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateFeedback
}

type Mutation {
  createFeedback(feedbackCreateModel: FeedbackCreateModel): Feedback
  updateFeedback(id: ID!, feedbackUpdateModel: FeedbackUpdateModel): Feedback
}
