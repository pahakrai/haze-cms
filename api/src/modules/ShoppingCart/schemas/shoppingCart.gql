scalar Date

type ShoppingCartItem {
  _id: ID
  product: Product
  productSku: ProductSku
  qty: Int
}

type ShoppingCart {
  _id: ID!
  user: User!
  items: [ShoppingCartItem!]

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input ShoppingCartItemInput {
  product: String!
  productSku: String!
  qty: Int!
}
input ShoppingCartItemsUpdateModelInput {
  itemId: ID!
  qty: Int!
}

type PaginateShoppingCart {
  nodes: [ShoppingCart]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

type Query {
  myShoppingCart: ShoppingCart
}

type Mutation {
  clearCart: ShoppingCart
  addToShoppingCart(item: ShoppingCartItemInput!): ShoppingCart
  updateCartItem(
    itemsUpdateModel: [ShoppingCartItemsUpdateModelInput!]
  ): ShoppingCart
  removeItemFromCart(itemId: String!): ShoppingCart
  removeItemsFromCart(itemIds: [String!]): ShoppingCart
}
