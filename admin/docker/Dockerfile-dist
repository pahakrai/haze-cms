ARG NPM_TOKEN
ARG NODE_ENV

# build environment
FROM node:8.10.0-alpine as builder

ARG NPM_TOKEN
ARG NODE_ENV

# set working directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

# add `/usr/src/app/node_modules/.bin` to $PATH
ENV PATH /usr/src/app/node_modules/.bin:$PATH

# install system dependencies
RUN apk update && apk upgrade
#     install cache
RUN apk add --no-cache bash git openssh

# install and cache app dependencies
#     install .npmrc to handle private repo
COPY docker/.docker_npmrc /usr/src/app/.npmrc
#     copy package.json to app folder
COPY package.json /usr/src/app/package.json
#     copy yarn.lock to app folder
COPY yarn.lock /usr/src/app/yarn.lock
RUN yarn install --frozen-lockfile --silent
COPY . /usr/src/app
RUN yarn build

# production environment
FROM nginx:1.13.9-alpine
RUN rm -rf /etc/nginx/conf.d
COPY docker/.nginx-conf /etc/nginx
COPY --from=builder /usr/src/app/build /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
