scalar Date

type WorkspaceTypeFile {
  name: String
  fileType: String
}

type WorkspaceTypePreferences {
  preference: String
  required: Boolean
  ref: String
}

type WorkspaceTypeMeta {
  data: String
  required: Boolean
}

type WorkspaceType {
  _id: ID!
  type: String!
  userType: String!
  files: [WorkspaceTypeFile!]
  meta: [WorkspaceTypeMeta]
  preferences: [WorkspaceTypePreferences]

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input WorkspaceTypeCreateModel {
  name: String!
}

input WorkspaceTypeUpdateModel {
  type: String
  userType: String
}

type PaginateWorkspaceType {
  nodes: [WorkspaceType]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input WorkspaceTypeSearchModel {
  type: String
  userType: String
}

type Query {
  myWorkspaceType: WorkspaceType
  userTypesDisplay: [String]
  workspaceTypeRequirements(
    userType: String!
    requirementType: String
  ): WorkspaceType
  workspaceType(id: ID!): WorkspaceType
  workspaceTypes(
    query: WorkspaceTypeSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateWorkspaceType
}
