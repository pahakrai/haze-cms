scalar Date

type WorkspacePaymentMethodCredential {
  publicKey: String
  # privateKey not allow to fetch
}

type WorkspacePaymentMethod {
  _id: ID!
  workspace: Workspace
  paymentMethod: PaymentMethod
  url: String
  platforms: [String]
  credential: WorkspacePaymentMethodCredential
  defaultCurrency: String
  chargeValue: Float
  chargeSymbol: String
  adminCharge: Float
  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input WorkspacePaymentMethodCreateModel {
  workspace: String
  paymentMethod: String
  url: String
  platforms: [String]
}

input WorkspacePaymentMethodUpdateModel {
  name: String
}

type PaginateWorkspacePaymentMethod {
  nodes: [WorkspacePaymentMethod]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input WorkspacePaymentMethodSearchModel {
  platform: String
}

type Query {
  workspacePaymentMethod(id: ID!): WorkspacePaymentMethod
  workspacePaymentMethods(
    query: WorkspacePaymentMethodSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateWorkspacePaymentMethod
  paymentServiceCharge(amount: Float!, paymentMethod: ID!): Float
}

# type Mutation {
#   createWorkspacePaymentMethod(
#     workspacePaymentMethodCreateModel: WorkspacePaymentMethodCreateModel
#   ): WorkspacePaymentMethod
#   updateWorkspacePaymentMethod(
#     id: ID!
#     workspacePaymentMethodUpdateModel: WorkspacePaymentMethodUpdateModel
#   ): WorkspacePaymentMethod
# }
