scalar Date

type VersionInfo {
  latestVersionNo: String
  appId: String
  appIconLink: String
  touchIcon: String
}

type WorkspaceApp {
  _id: ID!
  name: String
  productionIOS: VersionInfo
  productionAndroid: VersionInfo
  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input WorkspaceAppCreateModel {
  workspace: String!
  name: String!
}

input WorkspaceAppUpdateModel {
  workspace: String
  name: String
}

type PaginateWorkspaceApp {
  nodes: [WorkspaceApp]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input WorkspaceCourierSearchModel {
  q: String
  workspace: String
  name: String
}

type Query {
  getWorkspaceAppByName(name: String!): WorkspaceApp
}

type Mutation {
  createWorkspaceApp(
    workspaceAppCreateModel: WorkspaceAppCreateModel
  ): WorkspaceApp
  updateWorkspaceApp(
    id: ID!
    workspaceAppUpdateModel: WorkspaceAppUpdateModel
  ): WorkspaceApp
}
