scalar Date

type TagRecommendation {
  _id: ID!
  text: String!
  type: String!
  workspace: Workspace

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

# input TagRecommendationCreateModel {
#   name: String!
# }

# input TagRecommendationUpdateModel {
#   name: String
# }

type PaginateTagRecommendation {
  nodes: [TagRecommendation]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input TagRecommendationSearchModel {
  q: String
  type: String
}

type Query {
  tagRecommendation(id: ID!): TagRecommendation
  tagRecommendations(
    query: TagRecommendationSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateTagRecommendation
}

# type Mutation {
#   createTagRecommendation(
#     tagRecommendationCreateModel: TagRecommendationCreateModel
#   ): TagRecommendation
#   updateTagRecommendation(
#     id: ID!
#     tagRecommendationUpdateModel: TagRecommendationUpdateModel
#   ): TagRecommendation
# }
