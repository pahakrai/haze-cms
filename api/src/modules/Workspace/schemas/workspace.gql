scalar Date
scalar JSON

type WorkspaceContact {
  name: String!
  department: String
  phoneNo: String!
  ext: String
  email: String
  address: String
  coordinates: [Float]
  serviceHour: WorkspaceServiceHour
}

type WorkScheduleWorktime {
  from: String
  to: String
}

type WorkspaceServiceHour {
  worktime: WorkScheduleWorktime
  workdays: [String]
  timeTableDescription: String
}

type WorkspaceHooks {
  code: String
  url: String
}

type WorkspaceSetting {
  logo: FileMeta
  favicon: FileMeta
  headerLogo: FileMeta
  loginBackgroundImage: FileMeta
  ratingMaxValue: Float
  theme: Theme
}

type WorkspaceMarketing {
  googleTagManager: String!
  facebookPixel: String!
}

type WorkspaceSafeKey {
  workspace: String
  safeKey: String
  timestamp: String
}

type WorkspacePreference {
  auth: WorkspacePreferenceAuth
  event: WorkspacePreferenceEvent
  widgets: [String]
  payroll: WorkspacePreferencePayroll
  user: WorkspaceUserTypePreference
  order: WorkspacePreferenceOrder
  product: WorkspacePreferenceProduct
  mapType: String
}

type WorkspacePreferenceApplyRecruitmentLimit {
  currency: String
  amount: Float
  recruitmentTypes: [String]
}

type WorkspacePreferenceAuthLimit {
  user: Int
  provider: Int
  programmatic: Int
}

type WorkspacePreferenceAuthTwilio {
  channel: String
  useAuthy: Boolean
}

type WorkspacePreferenceAuth {
  authorizedDeviceLimit: WorkspacePreferenceAuthLimit
  twilioLogin: WorkspacePreferenceAuthTwilio
  subscription: Boolean
}

type WorkspacePreferenceEvent {
  notAllowModifyIn: Float
  peopleInChargeLimit: Int
}

type WorkspacePreferencePayroll {
  calculationMethod: String
  calculateAmountByDetails: Boolean
  enable: Boolean
}

type WorkspaceUserTypePreference {
  icon: FileMeta
  allowChangePhone: Boolean
}

type WorkspacePreferenceOrder {
  subscription: Boolean
  dailyCancelLimit: Int
  hasConsignee: Boolean
  hasInvoice: Boolean
  allowEdit: Boolean
  allowShoppingNoAddress: Boolean
  clientUserTypes: [String]
  consumeCredit: Boolean
  enableSignature: Boolean
  updatePeopleInCharge: Boolean
  acceptOrderCoolingOffPeriod: Int
  locationType: String
}
type WorkspacePreferenceProduct {
  isEnableCart: Boolean
  hasDeliveryAndPaymentInfo: Boolean
}

type ServiceAppFacebook {
  appId: String
  secret: String
}

type ServiceAppGoogle {
  web: ServiceAppGoogleWeb
  ios: ServiceAppGoogleIos
  android: ServiceAppGoogleAndroid
}

type ServiceAppGoogleWeb {
  appId: String
}

type ServiceAppGoogleIos {
  appId: String
}
type ServiceAppGoogleAndroid {
  appId: String
}
type ServiceApps {
  facebook: ServiceAppFacebook
  google: ServiceAppGoogle
}

type Workspace {
  _id: ID!
  code: String!
  logo: FileMeta
  status: Int
  name: String
  type: String
  webHost: String
  alwaysHttpsWebHost: Boolean
  appStoreUrl: String
  googlePlayUrl: String
  secret: String
  merchantWebHost: String
  adminHost: String
  setting: WorkspaceSetting
  contacts: [WorkspaceContact]
  marketing: WorkspaceMarketing
  preferences: WorkspacePreference
  hooks: [WorkspaceHooks]
  socialLinks: JSON
  serviceApps: ServiceApps
  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

type PaginateWorkspace {
  nodes: [Workspace]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input WorkspaceSearchModel {
  q: String
}

input WorkspaceUpdateModel {
  code: String!
  name: String!
  socialLinks: JSON
}

type Query {
  currentWorkspace: Workspace
  workspace(id: ID!): Workspace
  workspaceMarketing(id: ID!): JSON
  workspaceSocialLinks(id: ID!): JSON
  workspaceSafeKey(id: ID!): WorkspaceSafeKey
  workspaces(
    query: WorkspaceSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateWorkspace
}

type Mutation {
  updateWorkspace(id: ID!, updateModel: WorkspaceUpdateModel!): Workspace
}
