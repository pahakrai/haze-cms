scalar Date

type SalesVolume {
  _id: ID!
  time: String
  workspace: Workspace
  amount: Float
  currency: String
  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input SalesVolumeCreateModel {
  currency: String!
  time: Date!
  amount: Float!
}

input SalesVolumeUpdateModel {
  currency: String
  time: Date
  amount: Float
}

type PaginateSalesVolume {
  nodes: [SalesVolume]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input SalesVolumeSearchModel {
  q: String
}

type Query {
  salesVolume(id: ID!): SalesVolume
  salesVolumes(
    query: SalesVolumeSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateSalesVolume
}

type Mutation {
  createSalesVolume(salesVolumeCreateModel: SalesVolumeCreateModel): SalesVolume
  updateSalesVolume(
    id: ID!
    salesVolumeUpdateModel: SalesVolumeUpdateModel
  ): SalesVolume
}
