scalar Date

type TagImage {
  _id: ID!
  text: String
  image: FileMeta
  workspace: Workspace
  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input TagImageCreateModel {
  text: String!
  image: String!
  workspace: String!
}

input TagImageUpdateModel {
  text: String
  image: String
}

type PaginateTagImage {
  nodes: [TagImage]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input TagImageSearchModel {
  q: String
  texts: [String]
}

type Query {
  tagImage(id: ID!): TagImage
  tagImages(
    query: TagImageSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateTagImage
}

type Mutation {
  createTagImage(tagImageCreateModel: TagImageCreateModel): TagImage
  updateTagImage(id: ID!, tagImageUpdateModel: TagImageUpdateModel): TagImage
}
