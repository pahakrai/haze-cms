import {ObjectId} from 'mongodb';
import {Document, PaginateModel} from 'mongoose';
import {CouponLog} from '../submodules/CouponLog/interfaces';
import {FileMeta} from 'src/modules/File';
import {Product} from 'src/modules/Product/interfaces';
import {Workspace} from 'src/modules/Workspace/interfaces';

interface CouponCriteria {
  /**
   * payment method used
   */
  paymentMethods: string[];

  /**
   * whether order should any/every payment methods
   */
  paymentMethodsLogicGate: string;

  /**
   * products selected, if any
   */
  products: Product[] | Product['_id'][];

  /**
   * whether order should any/every products
   */
  productsLogicGate: string;

  /**
   * amount match and more than
   */
  amount: number;
}

interface CouponEffect {
  /**
   * fixed or percent
   */
  type: string;

  /**
   * effect type
   * can be whole order or specific product(s) only
   */
  creditType: string;

  /**
   * when fixed, it means coupon discount amount e.g. 100, 150
   * when percent, it means 0.01 - 1, (1 = 100%)
   */
  amount: number;
}

export interface Coupon extends Document {
  /**
   * unique ID for document
   */
  _id: ObjectId;

  /**
   * workspace this coupon belongs to
   */
  workspace: Workspace | Workspace['_id'];

  /**
   * code of coupon
   */
  code: string;

  /**
   * start date of coupon
   */
  startAt: Date;

  /**
   * end date of coupon
   */
  expireAt: Date;

  /**
   * title of coupon
   */
  title: string;

  /**
   * description of coupon
   */
  description: string;

  /**
   * images of this coupon
   */
  images: FileMeta[] | FileMeta['_id'][];

  /**
   * no of coupon
   */
  noOfCoupon: number;

  /**
   * redeem limit per user, if 0 then = no limit
   */
  redeemLimitPerUser: number;

  /**
   * currency of the coupon
   */
  currency: string;

  /**
   * criteria, match $And, if any
   */
  criteria: CouponCriteria;

  /**
   * coupon effects
   */
  effect: CouponEffect;

  /**
   * is category active
   */
  isActive: boolean;

  // virtual populate
  /**
   * usage log
   */
  logs?: CouponLog[];

  // generated by mongoose
  /**
   * create time of this document
   */
  createdAt: Date;

  /**
   * update time of this document
   */
  updatedAt: Date;
}

export type CouponModel = PaginateModel<Coupon>;
