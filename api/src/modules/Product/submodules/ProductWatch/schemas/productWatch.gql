scalar Date

type ProductWatch {
  _id: ID!
  client: User!
  product: Product!

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input ProductWatchCreateModel {
  client: ID!
  product: ID!
}

input ProductWatchUpdateModel {
  client: ID
  product: ID
}

type PaginateProductWatch {
  nodes: [ProductWatch]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input ProductWatchSearchModel {
  client: ID
  product: ID
}

type Query {
  productWatch(id: ID!): ProductWatch
  myProductWatchExist(productId: ID!): Boolean
  myProductWatches(paginate: Paginate): PaginateProductWatch
  productWatches(
    query: ProductWatchSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateProductWatch
}

type Mutation {
  createProductWatch(
    productWatchCreateModel: ProductWatchCreateModel
  ): ProductWatch
  updateProductWatch(
    id: ID!
    productWatchUpdateModel: ProductWatchUpdateModel
  ): ProductWatch
  removeProductWatches(productIds: [ID!]!): Boolean
  toggleProductWatch(productId: ID!): ProductWatch
}
