scalar Date

type WorkspaceSubscriptionInvoice {
  _id: ID!
  workspace: Workspace
  invoiceNo: String
  subscription: WorkspaceSubscription
  stripeInvoiceId: String
  stripeInvoiceUrl: String
  date: Date
  periodFr: Date
  periodTo: Date
  currency: String
  amount: Float
  status: String

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

# input WorkspaceSubscriptionInvoiceCreateModel {
#   name: String!
# }

# input WorkspaceSubscriptionInvoiceUpdateModel {
#   name: String
# }

type PaginateWorkspaceSubscriptionInvoice {
  nodes: [WorkspaceSubscriptionInvoice]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input WorkspaceSubscriptionInvoiceSearchModel {
  subscription: String
  dateFr: Date
  dateTo: Date
}

type Query {
  workspaceSubscriptionInvoice(id: ID!): WorkspaceSubscriptionInvoice
  workspaceSubscriptionInvoices(
    query: WorkspaceSubscriptionInvoiceSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateWorkspaceSubscriptionInvoice
}

# type Mutation {
#   createWorkspaceSubscriptionInvoice(workspaceSubscriptionInvoiceCreateModel:WorkspaceSubscriptionInvoiceCreateModel): WorkspaceSubscriptionInvoice
#   updateWorkspaceSubscriptionInvoice(id: ID!, workspaceSubscriptionInvoiceUpdateModel:WorkspaceSubscriptionInvoiceUpdateModel): WorkspaceSubscriptionInvoice
# }
