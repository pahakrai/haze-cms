scalar Date

type CustomerEnquiry {
  _id: ID!
  workspace: Workspace
  subject: String
  phoneRegion: String
  phone: String
  message: String
  email: String
  whoFollow: User
  isFollow: Boolean
  followTime: Date
  remarks: String
  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input CustomerEnquiryCreateModel {
  workspace: String
  subject: String
  phoneRegion: String
  phone: String
  message: String
  email: String
  whoFollow: String
  isFollow: Boolean
  remarks: String
}

input CustomerEnquiryUpdateModel {
  subject: String
  phoneRegion: String
  phone: String
  message: String
  email: String
  isFollow: Boolean
  whoFollow: String
  followTime: Date
  remarks: String
}

type PaginateCustomerEnquiry {
  nodes: [CustomerEnquiry]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input CustomerEnquirySearchModel {
  q: String
  isFollow: Boolean
}

type Query {
  customerEnquiry(id: ID!): CustomerEnquiry
  customerEnquiries(
    query: CustomerEnquirySearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateCustomerEnquiry
}

type Mutation {
  createCustomerEnquiry(
    customerEnquiryCreateModel: CustomerEnquiryCreateModel
  ): CustomerEnquiry
  updateCustomerEnquiry(
    id: ID!
    customerEnquiryUpdateModel: CustomerEnquiryUpdateModel
  ): CustomerEnquiry
  updateToFollow(id: ID!): CustomerEnquiry
}
