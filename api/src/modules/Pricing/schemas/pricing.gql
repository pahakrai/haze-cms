scalar Date

type Pricing {
  _id: ID!
  """
  unique pricing code e.g. Fare_5.5T_Diamond_Hill_to_Choi_Hung
  """
  code: String
  description: String
  currency: String
  amount: Float
  workspace: Workspace
  """
  price type (fixed, qty, quote)
  """
  priceType: String
  """
  start date of the price
  """
  effectiveDateFr: Date
  """
  end date of the price (optional)
  """
  effectiveDateTo: Date
  isActive: Boolean

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

type PaginatePricing {
  nodes: [Pricing]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input PricingSearchModel {
  name: String
}

type Query {
  pricing(id: ID!): Pricing
  pricings(query: PricingSearchModel, paginate: Paginate): PaginatePricing
}
