scalar Date

type Currency {
  _id: ID!
  code: String!
  symbol: String
  isActive: Boolean!

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input CurrencyCreateModel {
  code: String!
  isActive: Boolean!
}

input CurrencyUpdateModel {
  code: String
  isActive: Boolean
}

type PaginateCurrency {
  nodes: [Currency]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input CurrencySearchModel {
  code: String
  isActive: Boolean
}

type Query {
  currency(id: ID!): Currency
  currencys(
    query: CurrencySearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateCurrency
}

type Mutation {
  createCurrency(currencyCreateModel: CurrencyCreateModel): Currency
  updateCurrency(id: ID!, currencyUpdateModel: CurrencyUpdateModel): Currency
}
