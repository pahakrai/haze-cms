scalar Date

type AuthConfig {
  _id: ID!

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
  userType: String
  verifiedRequirements: [String]
  signUpRequireVerify: Boolean
  loginRequireVerify: Boolean
}

input AuthConfigCreateModel {
  name: String!
}

input AuthConfigUpdateModel {
  name: String
}

type PaginateAuthConfig {
  nodes: [AuthConfig]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input AuthConfigSearchModel {
  q: String
  userTypes: [String]
}

type Query {
  authConfig(id: ID!): AuthConfig
  authConfigs(
    query: AuthConfigSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateAuthConfig
}

type Mutation {
  createAuthConfig(authConfigCreateModel: AuthConfigCreateModel): AuthConfig
  updateAuthConfig(
    id: ID!
    authConfigUpdateModel: AuthConfigUpdateModel
  ): AuthConfig
}
