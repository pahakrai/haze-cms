scalar Date

type MemberFile {
  fileType: String
  file: FileMeta
  isVerified: Boolean
}

type Member {
  _id: ID!
  user: User
  files: [MemberFile]

  meta: JSON
  preferences: MemberPreference
  level: UserLevel
  avgFeedback: Float

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

type MemberPreferenceWage {
  currency: String
  min: Float
  max: Float
  unit: String
}

type MemberPreference {
  showAvgFeedback: Boolean
  locations: [Region]
  categories: [Category]
  tags: [TagRecommendation]
  employmentTypes: [String]
  wage: MemberPreferenceWage
}

input MemberPreferenceWageInput {
  currency: String
  min: Float
  max: Float
  unit: String
}

input MemberPreferenceInput {
  wage: MemberPreferenceWageInput
  locations: [ID]
  categories: [String]
  tags: [String]
  employmentTypes: [String]
  showAvgFeedback: Boolean
}

input FileModel {
  fileType: String
  file: String
  isVerified: Boolean
}

input MemberSignUpModel {
  # user signup
  user: AuthSignUpModel
  member: MemberCreateModel
  sendPasscode: Boolean
}

input MemberCreateModel {
  meta: JSON
  level: String
  preferences: MemberPreferenceInput
}

input MemberUpdateModel {
  meta: JSON
  files: [FileModel]
  preferences: MemberPreferenceInput
}

input FileInfo {
  fileType: String
  priority: Int
  userType: String
}

type PaginateMember {
  nodes: [Member]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input MemberSearchModel {
  q: String
}

type MemberSignUpResponse {
  user: User
  member: Member
  userToken: UserToken
}

type Query {
  myMember: Member
  member(id: ID!): Member
  memberUploadRequirements: [UploadRequirement]
  memberMetaRequirements: [MetaRequirement]
  members(
    query: MemberSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateMember
  myAddresses: [Address]
  myDefaultAddress: Address
  memberByUserId(userid: ID!): Member
}

type Mutation {
  signUpMember(
    signupModel: MemberSignUpModel!
    registrationFiles: [Upload]
    filesInfo: [FileInfo]
  ): MemberSignUpResponse
  loginMessagingMember(
    phoneRegionCode: String!
    phone: String!
    verifyCode: String!
  ): SignupResponse
  updateMyMember(memberUpdateModel: MemberUpdateModel): Member
  setMyDefaultAddress(addressId: ID!): Address
  addMyAddress(addressCreateModel: AddressCreateModel!): Address
  deleteMyAddress(addressId: ID!): Address
  updateMyAddress(
    addressId: ID!
    addressUpdateModel: AddressUpdateModel!
  ): Address
  toggleShowAvgFeedback: Member
  # updateMyPreferences(preferences: MemberPreferenceInput): MemberPreference
}
