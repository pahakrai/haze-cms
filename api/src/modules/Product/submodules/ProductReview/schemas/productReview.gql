scalar Date

type ProductReview {
  _id: ID!
  client: User!
  order: Order!
  product: Product!
  rating: Float!
  comment: String

  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

input ProductReviewCreateModel {
  client: String!
  product: String!
  order: String!
  rating: Float!
  comment: String!
}

input ProductReviewUpdateModel {
  client: String
  product: String
  order: String
  rating: Float
  comment: String
}

type PaginateProductReview {
  nodes: [ProductReview]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input ProductReviewSearchModel {
  q: String
}

type Query {
  productReview(id: ID!): ProductReview
  productReviews(
    query: ProductReviewSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateProductReview
}

type Mutation {
  createProductReview(
    productReviewCreateModel: ProductReviewCreateModel
  ): ProductReview
  updateProductReview(
    id: ID!
    productReviewUpdateModel: ProductReviewUpdateModel
  ): ProductReview
}
