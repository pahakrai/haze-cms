scalar Date

type Theme {
  _id: ID!
  scope: String
  baseTheme: String
  name: String
  color: JSON
  dimensions: JSON
  icons: Icons
  # generated by mongoose {timestamp: true}
  createdAt: Date
  updatedAt: Date
}

type Icons {
  facebook: String
  youtube: String
  instagram: String
  search: String
}

input ThemeCreateModel {
  name: String!
  scope: String
  baseTheme: String
  color: JSON
  dimensions: JSON
  icons: IconsModel
}

input IconsModel {
  facebook: String
  youtube: String
  instagram: String
  search: String
}

input ThemeUpdateModel {
  name: String
  scope: String
  baseTheme: String
  color: JSON
  dimensions: JSON
  icons: IconsModel
}

type PaginateTheme {
  nodes: [Theme]
  startCursor: ID
  endCursor: ID
  nodeCount: Float
  total: Float
  isEnd: Boolean
}

input ThemeSearchModel {
  q: String
}

type Query {
  theme(id: ID!): Theme
  themes(
    query: ThemeSearchModel
    paginate: Paginate
    options: QueryOption
  ): PaginateTheme
}

type Mutation {
  createTheme(themeCreateModel: ThemeCreateModel): Theme
  updateTheme(id: ID!, themeUpdateModel: ThemeUpdateModel): Theme
}
